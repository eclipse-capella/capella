#===============================================================================
# Copyright (c) 2006, 2014 THALES GLOBAL SERVICES.
# 
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
# 
# SPDX-License-Identifier: EPL-2.0
# 
# Contributors:
#    Thales - initial API and implementation
#===============================================================================
rule_incomplete_ERROR_= The item is not completely specified: missing item id in {0}

rule_name= item name
rule_id= item identifier

# NLS_MESSAGEFORMAT_VAR

# ---------------------------------------------------------------------
# Translation Instruction: section to be translated
# 
# Resources for formatting lists of items.
# ---------------------------------------------------------------------

# The text that typically appears between items in a list.
# *** note the trailing space. ***
list_separator= , 

# These two items are text that should precede and follow any list of more than
# two items.
# The prefix and suffix are not defined for English locales.
list_prefix=
list_suffix=

# =======================================================================================
# Translation Instruction: section to be translated
#
# Definition of the default item category.
# =======================================================================================

# The default category's name
category_default_name= Capella Commands Category

# The default category's description
category_default_desc= The default category is that which includes items \
	that are not explicitly members of any category.


# =======================================================================================
# Translation Instruction: section to be translated
#
# Error messages resulting from item evaluation.
# =======================================================================================

# Indicates that no items were evaluated.
eval_none_INFO_= No items were evaluated.

# Indicates that all items that were evaluated passed.
eval_all_pass_INFO_= All items passed.

# Indicates that some items failed (severity unspecified).
eval_some_fail_WARN_= Some model items failed; see messages for details.

# Indicates that some items failed with informational messages; all
#    others passed.
eval_some_info_INFO_= At least one model item generated an informational message.

# Indicates that some items failed with warning messages; all
#    others passed or were infos.
eval_some_warn_WARN_= At least one warning condition was found in the model.

# Indicates that some items failed with error messages; all
#    others passed or were infos or warnings.
eval_some_error_ERROR_= At least one error condition was found in the model.


# =======================================================================================
# Translation Instruction: section to be translated
#
# Extension point loading errors messages.
# =======================================================================================

# Indicates that a plugin's item definitions had loading errors.
# args:
#    0 - the contributing plugin ID
#
xml_parsing_ERROR_= Errors occurred in parsing XML item definitions contributed \
     by plugin "{0}".

# Indicates that a file's item definitions could not be loaded.
# args:
#    0 - the XML file that failed to parse
#
xml_parsing_file_ERROR_= Error parsing XML item definitions in file "{0}".

# Indicates that an element could not be popped from the XML stack because
#    the stack is empty.
#
xml_parsing_pop= XML items parsing stack is empty; cannot pop it.

# Indicates that the top of the XML stack cannot be peeked because
#    the stack is empty.
#
xml_parsing_peek= XML items parsing stack is empty; cannot peek it.

# Indicates that the XML stack body cannot be accessed because
#    the stack is empty.
#
xml_parsing_body= XML items parsing stack is empty; cannot get current element's body.

# Indicates that the XML configuration elements parsed by the plug-in (not by
#    the Eclipse platform) cannot create executable extensions.
# args:
#    0 - the element name
xml_create_extension_ERROR_= Cannot create executable extension from configuration element "{0}."

# Indicates that the XML items file could not be included because it does
#    not exist.
# args:
#    0 - the contributing plug-in name
#    1 - the items file name
xml_include_file_ERROR_= Cannot find items file "{1}" in plug-in "{0}."  These \
	items will not be loaded.

# Indicates that the XML file that has errors is not known.
xml_unknown_file= (file unknown)

# Indicates failure to load a resurce bundle referenced by a
#    <?emf-validation nl="<bundle-name>"?> processing instruction.
# args:
#    0 - the XML file that was being parsed when the error occurred
#    1 - the resource bundle that could not be found
xml_resource_bundle_WARN_= Could not find resource bundle "{1}" for translation of \
	XML file "{0}".

# Indicates unsupported version of the items markup referenced by a
#    <?emf-validation version="<number>"?> processing instruction.
# args:
#    0 - the unsupported version number that was specified
xml_markup_version_ERROR_= Unsupported items markup version "{0}".

# =======================================================================================
# Translation Instruction: section to be translated
#
# Provider access error messages.
# =======================================================================================

# Indicates that a provider could not be initialized.
# args:
#    0 - the fully-qualified class name of the provider
#
provider_not_init_ERROR_= Error initializing item provider class {0}. \
	Its items will not be evaluated.

# Indicates that a provider's operation method threw a runtime exception.
#
provider_failed_WARN_= A item provider failed to execute the operation. \
	Its items will not be evaluated.

# Indicates that a provider does not declare the namespace URI that it handles.
#
provider_no_nsuri_ERROR_= item provider must specify a namespace URI.

# Indicates that a provider attempted to register a duplicate item.
# args:
#   0 - the item ID in question
provider_dupe_constraint_WARN_= item already registered with id "{0}"

# =======================================================================================
# Translation Instruction: section to be translated
#
# Traversal strategy access error messages.
# =======================================================================================

# Indicates that a plug-in declared a traversal strategy without specifying the
# namespace URI that it targets.
# args:
#    0 - the contributing plug-in ID
traversal_nonsuri_WARN_= No namespace specified for traversal strategy from plug-in {0}

# Indicates that a plug-in declared a traversal strategy without specifying the
# class that implements it.
# args:
#    0 - the namespace URI for which the traversal strategy was declared
traversal_noclass_WARN_= No class specified for traversal strategy for namespace "{0}"

# Indicates that the class implementing a traversal strategy does not implement
# the correct interface.
# args:
#    0 - the class name
traversal_interface_ERROR_= Traversal strategy does not implement ITraversalStrategy interface: {0}

# Indicates that the EMF EClass targeted by a traversal strategy does not exist.
# args:
#    0 - the EClass name
#    1 - the namespace URI
traversal_eclass_WARN_= Traversal strategy targets unknown eclass "{0}" for namespace "{1}"

# =======================================================================================
# Translation Instruction: section to be translated
#
# item access error messages.
# =======================================================================================

# Indicates that a item could not be initialized and is, therefore,
#     not in the system.
# args:
#     0 - the ID of the item
#     1 - the reason for failure to initialize the item (should be one
#         of the item.reason.* strings, below)
#
constraint_not_init_WARN_= Error initializing item "{0}": {1}.  It will be ignored.

# The default name of an uninitialized item that failed to init because
#   it had no name.  The default name includes the originating file name.
# args:
#     0 - the name of the file from which the item was parsed
constraint_not_init_name= (unnamed item in file "{0}")

# Explanation of failure to initialize item because no ID was specified.
constraint_reason_no_id= no ID specified


# Indicates that a item could not resolve the specified EMF element type.
# args:
#     0 - the ID of the item
#     1 - the name of the EMF type that couldn't be found
#
constraint_target_type_WARN_= item "{0}" could not find target EMF type "{1}."

# Indicates that a item's delegate class does not exit.
# args:
#     0 - the ID of the item
#     1 - the name of the nonexistent class
#
constraint_delegate_class_ERROR_= Delegate class "{1}" of item "{0}" could not \
	be found.  The item is not initialized.

# Indicates that a item's delegate class could not be instantiated.
# args:
#     0 - the ID of the item
#     1 - the name of the item's delegate class
#
constraint_delegate_instantiation_ERROR_= item "{0}" could not instantiate class \
	"{1}" for invocation of the non-static delegate method.  The item is disabled.

# Indicates that a item's delegate method is not accessible.
# args:
#     0 - the ID of the item
#     1 - the name of the inaccessible method's declaring class
#     2 - the name of the inaccessible method
#
constraint_delegate_inaccessible_ERROR_= item "{0}" could not access its delegate method \
	"{2}" of class "{1}".  The item is disabled.

# Indicates that a item's delegate method failed with an exception.
# args:
#     0 - the ID of the item
#     1 - the name of the failed method's declaring class
#     2 - the name of the failed method
#
constraint_delegate_failed_ERROR_= Delegate method "{1}.{2}" of item "{0}" \
	failed on invocation.  The item is disabled.

# Indicates that a item parser could not be initialized.
# args:
#    0 - the item parser class
#    1 - the language supported by the item parser
#
constraint_parser_not_init_WARN_= Error registering item parser class {0}. \
	items expressed in the "{1}" language will not be evaluated.

# Indicates that a item parser does not conform to the correct interface.
# args:
#    0 - the item parser class
#    1 - the language supported by the item parser
#
constraint_parser_type_WARN_= item parser class {0} does not implement IXmlitemParser interface. \
	items expressed in the "{1}" language will not be evaluated.

# Indicates that no parser is available for a item language.
# args:
#    0 - the language
#
constraint_parser_missing_WARN_= No parser is registered for the "{0}" language. \
	items expressed in this language will not be evaluated.

# Indicates that a item, which had been loaded from the XML file, failed
#     to execute and is, therefore, disabled.
# args:
#     0 - the item ID
#
constraint_disabled_INFO_= The item "{0}" is disabled.  It will not be evaluated.

# Indicates that a item executed successfully.
#
constraint_success_INFO_= The item is met.


# Indicates that a item contributed via a plug-in manifest is incomplete.
# args:
#   0 - the missing component of the item (one of the four following items)

rule_body= item body (the expression in the specified item language)
rule_message= message pattern


# =======================================================================================
# Translation Instruction: section to be translated
#
# Error messages involving client contexts and item bindings.
# =======================================================================================

# Indicates that a <clientContext> extension in a plug-in omitted the
#   context ID.
# args:
#   0 - the ID of the plug-in defining the offending extension
#
client_noId_ERROR_= No ID specified for client context in plug-in {0}.

# Indicates that a <clientContext> extension in a plug-in omitted the selector
#   definition.
# args:
#   0 - the context ID
#   1 - the ID of the plug-in defining the offending extension
#
client_noSelector_ERROR_= No enablement expression or selector class specified for \
	client context "{0}" defined by plug-in {1}.

# Indicates that a <clientContext> selector class does not implement the required
#   interface.
# args:
#   0 - the selector class
#   1 - the required interface
#   2 - the context ID that specified the invalid selector class
#   3 - the ID of the plug-in defining the offending extension
#
client_selectorClass_ERROR_= Selector class {0} does not implement interface {1} \
	in client context "{2}" defined by plug-in {3}.

# Indicates that a <clientContext> enablement expression is malformed in some way.
# args:
#   0 - the client context ID
#   1 - the ID of the plug-in defining the offending extension
#
client_badExpression_ERROR_= Invalid enablement expression for client context {0} \
	defined by plug-in {1}.

# Indicates that a client context selector threw a run-time exception and is
#   therefore removed from the system to avoid further problems.
# args:
#   0 - the client context that failed
#
client_selectorFailure_ERROR_= Client context {0} failed with a run-time exception. \
	It is disabled; its item bindings are removed from the system.

# Indicates that a item binding omitted the client context ID reference.
# args:
#   0 - the ID of the plug-in defining the offending extension
#
binding_noContextId_ERROR_= No client context specified in item binding in \
	plug-in {0}.

# Indicates that a item binding references an undefined client context ID.
# args:
#   0 - the undefined item context ID
#   1 - the ID of the plug-in defining the offending extension
binding_noSuchContext_ERROR_= Client context {0} does not exist in item \
	binding defined by plug-in {1}.

# Indicates that a item binding does not actually specify any item.
# args:
#   0 - the client context ID of the binding
#   1 - the ID of the plug-in defining the offending extension
binding_noConstraintRef_WARN_= item binding for client context {0} does \
	not reference a item ID in plug-in {1}.

# Indicates that a item category binding does not actually specify any category.
# args:
#   0 - the client context ID of the binding
#   1 - the ID of the plug-in defining the offending extension
binding_noCategoryRef_WARN_= item category binding for client context \
	{0} does not reference a category path in plug-in {1}.

# Indicates that a client context extension does not actually specify any context.
# args:
#   0 - the client context ID of the binding
#   1 - the ID of the plug-in defining the offending extension
binding_noClientContextRef_WARN_= item binding for client context {0} does \
	not reference an extended client context in plug-in {1}.


# =======================================================================================
# Translation Instruction: section to be translated
#
# Miscellaneous.
# =======================================================================================

# Localized name of the "Live" item evaluation mode
mode_live= live (automatic)

# Localized name of the "Batch" item evaluation mode
mode_batch= batch (on-demand)

# Localized name of the "null" item evaluation mode
mode_unknown= unspecified

# Localized name of the "Info" item severity
severity_info= informational

# Localized name of the "Warning" item severity
severity_warning= warning

# Localized name of the "Error" item severity
severity_error= error

# Localized name of the "Cancel" item severity
severity_cancel= cancel (aborts validation)

# Localized name of the "Null" item severity
severity_null= unspecified

# Task label for use by progress monitors that monitor the progress
# of a batch validation operation
progress_task_validating= Validating ...

# A validation listener has failed its initialization and will be removed
listener_uncaught_EXC_=An exception occurred while initializing and informing a validation listener with id {0}. The listener has been removed for this session.

# Attempt to register a custom event type that is already defined.
#  args:
#    0 - the name of the duplicate event type
duplicate_eventType_ERROR_=Duplicate event type name: {0}

# =======================================================================================
# Translation Instruction: section to be translated
#
# Messages from the EMF validation adapter.
# =======================================================================================

# args:
#   0 - the name of the item that is disabled
emfadapter_disabled_WARN_= item "{0}" disabled due to a run-time exception.  See error log for details.

emfadapter_noInterface_WARN_= No interface specified for validation method.
emfadapter_noMethod_WARN_= No validation method specified in the interface.
emfadapter_notBoolean_WARN_= EMF validation method result type is not boolean.
emfadapter_illegalAccess_WARN_= Security violation in access to EMF validation method.

# args:
#   0 - the name of the interface that could not be found
emfadapter_interfaceNotFound_WARN_= Cannot find EMF interface: {0}.

# args:
#   0 - the name of the EMF interface
#   1 - the name of the validation method that could not be found
emfadapter_methodNotFound_WARN_= Cannot find EMF validation method: {0}::{1}

emfadapter_noMessage=No Message.
