# ====================================================================
# Copyright (c) 2006, 2019 THALES GLOBAL SERVICES.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
# 
# Contributors:
#    Thales - initial API and implementation
# ====================================================================

pluginName = Capella Activity Explorer
providerName = Eclipse.org


capellaActivityExplorerWorkflowPage = Workflow
operationalAnalysisPage = Operational Analysis
systemAnalysisPage = System Analysis
logicalArchitecturePage = Logical Architecture
physicalArchitecturePage = Physical Architecture
epbsPage = EPBS

#Description to take in account when top right tip page description will be fixed
capellaActivityExplorerWorkflowPageDescription = \
<p>\
</p>\

operationalAnalysisPageDescription = \
<p>\
Beyond and before requirements, \
the goal of the Operational Analysis is to model the business view of an \
operational domain. It is not focused on the system to be develop but \
on its global environment.\
</p>\
<p>\
Operational Need Analysis is more and more important in complex systems \
engineering: many major customers require or impose this analysis as mandatory \
part of the delivered "architecture".\
</p>

systemAnalysisPageDescription = \
<p>\
The System Analysis level is used to model \
the system viewed like a black box. It clarifies what the system is expected to \
do and what its boundaries are.\
</p>

logicalArchitecturePageDescription = \
<p>\
The Logical Architecture is used to model the system viewed like a white box. \
The Logical Architecture is a justified breakdown of the system or software, \
compliant not only with functional issues, but also with all main non-functional \
concerns susceptible to impact the breakdown.\
</p>\
<p>\
The Logical Architecture is expected to be stable against further engineering \
steps and detailed design choices (unlike the physical architecture).\
</p>

physicalArchitecturePageDescription = \
<p>\
The Physical Architecture is a refinement and enrichment of the Logical \
Architecture, dealing with technological and development constraints, through \
an appropriate organisation and the use of "architectural patterns" or templates \
to rationalise development.\
</p>\
<p>\
The physical architecture identifies all components that will be produced and \
integrated.\
</p>

epbsPageDescription = \
<p>\
The EPBS Architecture level is used to model the system viewed like a \
contractual, organisational and industrial breakdown. It describes the actual \
components chosen to build the System in conformance with expectations described \
at Physical, Logical and System Analysis taking in account contractual, \
organisational and industrial concerns.\
</p>

#Overview Descriptions
operationalAnalysisDescription = \
<p>\
<b>Define Stakeholder Needs and Environment</b>\
</p>\
<p>\
Capture and consolidate operational needs from stakeholders<br/>\
Define what the users of the system have to accomplish<br/>\
Identify entities, actors, roles, activities, concepts\
</p>

syetemAnalysisDescription = \
<p>\
<b>Formalize System Requirements</b>\
</p>\
<p>\
Identify the boundary of the system, consolidate requirements<br/>\
Define what the system has to accomplish for the users<br/>\
Model functional dataflows and dynamic behaviour\
</p>

logicalArchitectureDescription = \
<p>\
<b>Develop System Logical Architecture</b>\
</p>\
<p>\
See the system as a white box<br/>\
Define how the system will work so as to fulfill expectations<br/>\
Perform a first trade-off analysis\
</p>

physicalArchitectureDescription = \
<p>\
<b>Develop System Physical Architecture</b>\
</p>\
<p>\
How the system will be developed and built<br/>\
Software vs. hardware allocation, specification of interfaces,<br/>\
deployment configurations, trade-off analysis\
</p>

epbsDescription = \
<p>\
<b>Formalize Component Requirements</b>\
</p>\
<p>\
Manage industrial criteria and integration strategy: what is<br/>\
expected from each designer/sub-contractor<br/>\
Specify requirements and interfaces of all configuration items\
</p>

#Operational Analysis Page

#Operational Entities and capabilities sections and activities
#Section: Define Operational Entities and capabilities
OperationalAnalysisActivityExplorerPage_DefineActorsOperationalEntitiesCapabilitiesSection_Title=Define Operational Entities and Capabilities
OperationalAnalysisActivityExplorerPage_DefineActorsOperationalEntitiesCapabilitiesSection_Description=Identify the operational domain: who are the actors and entities, which are their purposes? Activities give a global view upon the operational business goals.
OperationalAnalysisActivityExplorerPage_NewOperationalEntityBreakdownDiagramAction_Title=[OEBD] Create a new Operational Entity Breakdown diagram
OperationalAnalysisActivityExplorerPage_NewOperationalCapabilitiesDiagramAction_Title=[OCB] Create a new Operational Capabilities diagram

#Section: Define Operational Activities a d describe Interaction
OperationalAnalysisActivityExplorerPage_DefineOperationalActivitiesInteractionSection_Title=Define Operational Activities and describe Interactions
OperationalAnalysisActivityExplorerPage_DefineOperationalActivitiesInteractionSection_Description=Detail the operational activity breakdown, describe the interactions between entities and model the operational processes
OperationalAnalysisActivityExplorerPage_NewOperationalActivityBreakdownDiagramAction_Title=[OABD] Create a new Operational Activity Breakdown diagram
OperationalAnalysisActivityExplorerPage_NewOperationalInteractionBlankDiagramAction_Title=[OAIB] Create a new Operational Activity Interaction diagram
OperationalAnalysisActivityExplorerPage_NewActivityInteractionScenarioAction_Title=[OAS] Create a new Operational Activity Scenario

#Section: Allocate Operational Activities to Operational Actors, Entities or Roles
OperationalAnalysisActivityExplorerPage_AllocateOperationalActivitiesToActorsEntitiesRolesSection_Title=Allocate Operational Activities to Operational Actors, Entities or Roles
OperationalAnalysisActivityExplorerPage_AllocateOperationalActivitiesToActorsEntitiesRolesSection_Description=\
<p>\
Operational actors and entities are responsible for performing the operational \
activities. Manage allocations and deduce communication means between entities. \
</p>\
<p>Create Scenarios to illustrate interactions between the operational actors \
and entities\
</p>
OperationalAnalysisActivityExplorerPage_NewOperationalEntityBlankDiagramAction_Title=[OAB] Create a new Operational Architecture diagram
OperationalAnalysisActivityExplorerPage_NewRoleBlankDiagramAction_Title=[ORB] Create a new Operational Role diagram
OperationalAnalysisActivityExplorerPage_NewInteractionScenarioAction_Title=[OES] Create a new Operational Entity Scenario

#Section:Transverse Modeling
AbstractCapellaArchitectureActivityExplorerPage_TransverseModelingSection_Title=Transverse Modeling
AbstractCapellaArchitectureActivityExplorerPage_TransverseModelingSection_Description=\
<p>\
<b>Describe the state machine of the system</b>,\
 specifying which are its modes and states. Among others, state machines can be created on the following kinds of elements:\
 system, components, actors, classes (data), etc.\
</p>\
<p>\
<b>Describe the domain elements and the actually exchanged data.</b>\
</p>\
<li>\
Domain Elements: modeling elements of the domain should not be "polluted" by technical considerations (e.g.: internal representation\
 of data, database storage, access methods, etc.). In the beginning, concentrate only on elements that provide high-level semantic \
related to the domain.\
</li>\
<li>\
Data actually exchanged between components: used for example to type parameters in interface operations. These data have to be unambiguous\
 and consistent.\
</li>\
<p>\
Both the domain elements and actual data are described in a Class diagram.\
</p>
AbstractCapellaArchitectureActivityExplorerPage_NewClassDiagram_Title=[CDB] Create a new Class diagram
AbstractCapellaArchitectureActivityExplorerPage_NewClassDiagram_Description=Describe the Information exchanged between Functions and / or  between Components with a new Class Diagram Blank
AbstractCapellaArchitectureActivityExplorerPage_NewModeStateMachineDiagram_Title=[MSM] Create a new Mode State Machine diagram
AbstractCapellaArchitectureActivityExplorerPage_NewStateMachinDiagram_Title=[M&S] Create a new Modes & States Machine diagram [DEPRECATED]
AbstractCapellaArchitectureActivityExplorerPage_NewStateModeFunctionsMatrix_Title=Create a new State & Mode / Functions matrix

#System Analysis Page

#Section: Transition from operational Analysis
SystemAnalysisActivityExplorerPage_TransitionFromOASection_Title=Transition From Operational Activities
SystemAnalysisActivityExplorerPage_TransitionFromOASection_Description=\
<p>\
Initialisation and automated update of the system analysis according to the breakdown of operational activities.\
</p>\
<p>\
The initialisation and automated updated of the system actors can also be automatically performed from selected operational entities / actors.\
</p>\
<p>\
The transition tools create a first 1-1 traceability mapping between System Analysis and Operational Analysis. Use dedicated traceability \
matrices to modify the traceability relationships.\
</p>
SystemAnalysisActivityExplorerPage_PerformAutomatedTransition_Description=One System Function will be created for each Operational Activity
SystemAnalysisActivityExplorerPage_PerformAutomatedTransition_Title=Perform an automated transition of Operational Activities
SystemAnalysisActivityExplorerPage_NewSystemFunctionsOperationalActivitiesTraceabilityMatrix_Title=Create a System Functions / Operational Activities Traceability Matrix

#Section: Define Actors, Missions and Capabilities
SystemAnalysisActivityExplorerPage_DefineActorsMissionsCapabilitiesSection_Title=Define Actors, Missions and Capabilities
SystemAnalysisActivityExplorerPage_DefineActorsMissionsCapabilitiesSection_Description=\
<p>\
Identify the boundaries of the system : who which are the actors, which are their goals?\
</p>\
<p>\
Missions give a global view upon the system main business goals and usages.\
</p>\
<p>\
Capabilities provide a more operational and finer-grained enlightenment, directly related to customer\
 requirements. Capabilities are meant to be illustrated with scenarios.\
</p>
SystemAnalysisActivityExplorerPage_PerformTransitionOfCapabilities_Title=Perform an automated transition of Operational Capabilities
SystemAnalysisActivityExplorerPage_PerformTransitionOfCapabilities_Description=Perform an automated transition of Operational Capabilities to the System Analysis 
SystemAnalysisActivityExplorerPage_SystemAnalysisActivityExplorerPage_NewSystemActorsFromOperationalEntitiesActors_Description=One system actor will be created for each selected operational entity or actor
SystemAnalysisActivityExplorerPage_SystemAnalysisActivityExplorerPage_NewSystemActorsFromOperationalEntitiesActors_Title=Contextually create new System Actors from Operational Entities / Actors
SystemAnalysisActivityExplorerPage_SystemAnalysisActivityExplorerPage_NewSystemCapabilityOrMissionFromOperationalCapability_Description=One system capability or mission will be created for each operational capability
SystemAnalysisActivityExplorerPage_SystemAnalysisActivityExplorerPage_NewSystemCapabilityOrMissionFromOperationalCapability_Title=Contextually create new System Capability or Mission from Operational Capability
SystemAnalysisActivityExplorerPage_NewContextualSystemActorsDiagram_Title=[CSA] Create a new Contextual System Actors diagram
SystemAnalysisActivityExplorerPage_NewMissionCapabilityDiagram_Title=Create a new Mission and / or Capability  Blank diagram
SystemAnalysisActivityExplorerPage_NewSystemActorsOperationalEntitiesAction_Title=Create a System Actors / Operational Entities Traceability Matrix

#Section: Allocate System Functions to System and  Actors
SystemAnalysisActivityExplorerPage_AllocateSystemFunctionToSystemAndActorsSection_Title=Allocate System Functions to System and  Actors
SystemAnalysisActivityExplorerPage_AllocateSystemFunctionToSystemAndActorsSection_Description = \
<p>\
The system and the actors are responsible for implementing the system functions. Manage these \
allocations using an architecture diagram and deduce component exchanges \
implementing the functional exchanges.\
</p>\
<p>\
Create dataflows scenarios to illustrate the functional exchanges between \
the system and the actors.\
</p>
SystemAnalysisActivityExplorerPage_NewSystemArchitectureDiagram_Title=[SAB] Create a new System Architecture diagram
SystemAnalysisActivityExplorerPage_NewExchangeScenario_Title=[ES] Create a new Exchange Scenario

#Section: Refine System Functions, describe Functional Exchanges
SystemAnalysisActivityExplorerPage_RefineSystemFunctionsDescribeFunctionalExchangesSection_Title=Refine System Functions, describe Functional Exchanges
SystemAnalysisActivityExplorerPage_RefineSystemFunctionsDescribeFunctionalExchangesSection_Description=\
<p>\
Enrich and details the functional breakdown with new system functions.\
</p>\
<p>\
Describe the data flows between system functions and identify specific functional chains.\
</p>
SystemAnalysisActivityExplorerPage_NewFunctionalBreakdownDiagram_Title=[SFBD] Create a new Functional Breakdown diagram
SystemAnalysisActivityExplorerPage_NewBlankDataflowDiagram_Title=[SDFB] Create a new Functional Dataflow Blank diagram
SystemAnalysisActivityExplorerPage_NewFunctionalScenarioAction_Title=[FS] Create a new Functional Scenario

#Section: Define Interfaces and describe Interface Scenarios
SystemAnalysisActivityExplorerPage_DefineInterfacesDescribeScenariosSection_Title=Define Interfaces and describe Interface Scenarios
SystemAnalysisActivityExplorerPage_DefineInterfacesDescribeScenariosSection_Description=\
<p>\
Detail the interfaces of the system as well as the ones of the actors, thus drawing the boundary of the system.\
</p>\
<p>\
Describe scenarios in order to specify the dynamical behaviour of the system.\
</p>\
<p>\
Defining the interaction sequences and identifying the interfaces are two very tight and iterative activities.\
</p>
SystemAnalysisActivityExplorerPage_PerformAutomatedTransitionOfSystem_Description=The Logical System will be synchronized according to the System (Used/Implemented Interfaces and Ports)
SystemAnalysisActivityExplorerPage_PerformAutomatedTransitionOfSystem_Title=Perform an automated synchronization of System interfaces  and Ports
SystemAnalysisActivityExplorerPage_NewDetailedInterfaceDiagramOnSystem_Title=[CDI] Create a new Contextual Detailed Interfaces diagram on the System
SystemAnalysisActivityExplorerPage_NewExternalInterfaceDiagramOnSystem_Title=[CEI] Create a new Contextual External Interface diagram on the System
SystemAnalysisActivityExplorerPage_NewScenario_Title=[IS] Create a new Interface Scenario

#Logical Architecture Page

#Section: Transition From System Function
LogicalArchitectureActivityExplorerPage_TransitionFromSFSection_Title=Transition from System Functions
LogicalArchitectureActivityExplorerPage_TransitionFromSFSection_Description=\
<p>\
Initialisation and automated update of the logical functions according to the system functions\
</p>\
<p>\
The transition tools create a first 1-1 traceability mapping between Logical Architecture and System Analysis. Use dedicated traceability \
matrices to modify the traceability relationships.\
</p>
LogicalArchitectureActivityExplorerPage_PerformAutomatedTransition_Description=One Logical Function will be created for each System Function
LogicalArchitectureActivityExplorerPage_PerformAutomatedTransition_Title=Perform an automated transition of System Functions
LogicalArchitectureActivityExplorerPage_CreateTraceabilityMatrix_Title=Create Traceability Matrix
LogicalArchitectureActivityExplorerPage_RefineLogicalFunctionsDescribeFunctionalExchangesSection_Title=Refine Logical Functions, describe Functional Exchanges
LogicalArchitectureActivityExplorerPage_RefineLogicalFunctionsDescribeFunctionalExchangesSection_Description=\
<p>\
Enrich and details the functional breakdown with new logical functions.\
</p>\
<p>\
Describe the data flows between logical functions and identify specific functional chains.\
</p>
LogicalArchitectureActivityExplorerPage_NewFunctionalBreakdownDiagram_Title=[LFBD] Create a new Functional Breakdown diagram
LogicalArchitectureActivityExplorerPage_NewBlankFunctionalDataflowDiagram_Title=[LDFB] Create a new Functional Dataflow Blank diagram
LogicalArchitectureActivityExplorerPage_NewFunctionalScenarioAction_Title=[FS] Create a new Functional Scenario

#Section: Define Logical Components and Actors
LogicalArchitectureActivityExplorerPage_DefineLogicalComponentsActorsSection_Title=Define Logical Components and Actors
LogicalArchitectureActivityExplorerPage_DefineLogicalComponentsActorsSection_Description=\
<p>\
The initialisation and automated updated of the logical actors can be performed according to system actors.\
</p>\
<p>\
Use an architecture or breakdown diagram to describe the system internal building blocks from a logical point of view.\
Logical components are intended to interact with each other to achieve the functional goals of the system.\
</p>
LogicalArchitectureActivityExplorerPage_PerformAutomatedTransitionOfSystemActors_Title=Perform an automated transition of System Actors
LogicalArchitectureActivityExplorerPage_PerformAutomatedTransitionOfSystemActors_Description=One Logical Actor will be created for each System Actor
LogicalArchitectureActivityExplorerPage_NewComponentBreakdownDiagram_Title=[LCBD] Create a new Logical Component Breakdown diagram




#Section: Allocate Logical Functions to Logical Components
LogicalArchitectureActivityExplorerPage_AllocateLogicalFunctionToLogicalComponentsSection_Title=Allocate Logical Functions to Logical Components
LogicalArchitectureActivityExplorerPage_AllocateLogicalFunctionToLogicalComponentsSection_Description=\
<p>\
The logical components are responsible for implementing the logical functions. Manage these allocations using an architecture diagram and \
deduce component exchanges implementing the functional exchanges.\
</p>\
<p>\
Create dataflows scenarios to illustrate functional exchanges between the components.\
</p>
LogicalArchitectureActivityExplorerPage_NewLogicalArchitectureDiagram_Title=[LAB] Create a new Logical Architecture diagram
LogicalArchitectureActivityExplorerPage_NewExchangeScenario_Title=[ES] Create a new Exchange Scenario
LogicalArchitectureActivityExplorerPage_NewAllocationLcLfMatrix_Title=Create a new allocation Logical Component / Logical Function Matrix


#Section: Delegate System Interfaces and create Logical Interfaces
LogicalArchitectureActivityExplorerPage_DelegateSystemInterfacesCreateLogicalInterfacesSection_Title=Delegate System Interfaces and create Logical Interfaces
LogicalArchitectureActivityExplorerPage_DelegateSystemInterfacesCreateLogicalInterfacesSection_Description=\
<p>\
Use the automated synchronisation tool to initialise the root logical system according to the interfaces defined in System Analysis.\
</p>\
<p>\
Delegate each system interface to one or more logical components. Create internal interfaces between sub components.\
</p>
LogicalArchitectureActivityExplorerPage_PerformAutomatedTransitionOfSystem_Description=The Logical System will be synchronized according to the System (Used/Implemented Interfaces and Ports)
LogicalArchitectureActivityExplorerPage_PerformAutomatedTransitionOfSystem_Title=Perform an automated synchronization of System Interfaces and Ports
LogicalArchitectureActivityExplorerPage_NewInternalInterfaceDiagramOnLS_Title=[CII] Create a new Contextual Internal Interface diagram on the Logical System Component

#Section: Enrich Logical Scenarios
LogicalArchitectureActivityExplorerPage_EnrichLogicalScenarioSection_Title=Enrich Logical Scenarios
LogicalArchitectureActivityExplorerPage_EnrichLogicalScenarioSection_Description=\
<p>\
Specify the dynamical behaviour of the logical components by completing the interaction sequences coming from the System Analysis.\
 The enrichment of the interaction sequences and the identification of the logical interfaces are two very tight and iterative activities.\
</p>\
<p>\
The scenario refinement process is iterative, each update on a source can be automatically propagated to the target.\
</p>
LogicalArchitectureActivityExplorerPage_PerformTransitionOfCapabilities_Title =Perform an automated transition of System Analysis Capabilities
LogicalArchitectureActivityExplorerPage_PerformTransitionOfCapabilities_Description =Perform an automated transition of Capabilities in the logical architecture
LogicalArchitectureActivityExplorerPage_ExecuteGlobalRefinementOfAllSaCapabilitiesAndScenario_Title=Execute a global refinement of all System Analysis Capabilities and Scenarios
LogicalArchitectureActivityExplorerPage_ExecuteGlobalRefinementOfAllSaCapabilitiesAndScenario_Description=One Capability Realisation will be created for each System Capability. One Logical Scenario will be created for each System Scenario
LogicalArchitectureActivityExplorerPage_NewScenario_Title=[IS] Create a new Interface Scenario

#Physical Architecture Page

#Section: Transition from Logical Function
PhysicalArchitectureActivityExplorerPage_TransitionFromLFSection_Title=Transition from Logical Functions
PhysicalArchitectureActivityExplorerPage_TransitionFromLFSection_Description =\
<p>\
Initialisation and automated update of the logical functions according to the system functions\
</p>\
<p>\
The transition tools create a first 1-1 traceability mapping between Logical Architecture and System Analysis.\
Use dedicated traceability matrices to modify the traceability relationships.\
</p>
PhysicalArchitectureActivityExplorerPage_PerformAutomatedTransition_Description=One Physical Function will be created for each Logical Function
PhysicalArchitectureActivityExplorerPage_PerformAutomatedTransition_Title=Perform an automated transition of Logical Functions
PhysicalArchitectureActivityExplorerPage_CreateTraceabilityMatrix=Create Traceability Matrix

#Section: Refine Physical Functions, describe Functional Exchanges
PhysicalArchitectureActivityExplorerPage_RefinePhysicalFunctionsDescribeFunctionalExchangesSection_Title=Refine Physical Functions, describe Functional Exchanges
PhysicalArchitectureActivityExplorerPage_RefinePhysicalFunctionsDescribeFunctionalExchangesSection_Description =\
<p>\
Enrich and details the functional breakdown with new physical functions.\
</p>\
<p>\
Describe the data flows between logical functions and identify specific functional chains.\
</p>
PhysicalArchitectureActivityExplorerPage_NewFunctionalBreakdownDiagram_Title=[PFBD] Create a new Functional Breakdown diagrams
PhysicalArchitectureActivityExplorerPage_NewBlankFunctionalDataflowDiagram_Title=[PDFB] Create a new Functional Dataflow Blank diagram
PhysicalArchitectureActivityExplorerPage_NewFunctionalScenarioAction_Title=[FS] Create a new Functional Scenario

#Section: Allocate Physical Functions to Physical Components
PhysicalArchitectureActivityExplorerPage_AllocatePhysicalFunctionToPhysicalComponentsSection_Title=Allocate Physical Functions to Physical Components
PhysicalArchitectureActivityExplorerPage_AllocatePhysicalFunctionToPhysicalComponentsSection_Description=\
<p>\
The behavioural physical components are responsible for implementing the physical functions. Manage these allocations using an architecture \
diagram and deduce component exchanges implementing the functional exchanges.\
</p>\
<p>\
Manage the deployment of behaviour components on node components and deduce physical links and paths.\
Create dataflows scenarios to illustrate functional exchanges between the components.\
</p>
PhysicalArchitectureActivityExplorerPage_NewExchangeScenario_Title=[ES] Create a new Exchange Scenario
PhysicalArchitectureActivityExplorerPage_NewAllocationPcPfMatrix_Title=Create a new allocation Physical Component / Physical Function Matrix

#Section: Define Physical Components and Actors, Manage deployments
PhysicalArchitectureActivityExplorerPage_DefinePhysicalComponentsActorsSection_Title=Define Physical Components and Actors, Manage deployments
PhysicalArchitectureActivityExplorerPage_DefinePhysicalComponentsActorsSection_Description=\
<p>\
The initialisation and automated updated of the physical actors can be automatically performed according to logical actors.\
</p>\
<p>\
Define the physical components. A physical component is a physical representation of an entity in the system\
 (hardware, software, firmware, personnel, facilities, data, materials, services and processes). It is in charge of the implementation\
 of one or several logical components. A physical component can be Node or Behaviour.\
</p>
PhysicalArchitectureActivityExplorerPage_PerformAutomatedTransitionOfLogicalActors_Description=One Physical Actor will be created for each External Logical Actor
PhysicalArchitectureActivityExplorerPage_PerformAutomatedTransitionOfLogicalActors_Title=Perform an automated transition of External Logical Actors
PhysicalArchitectureActivityExplorerPage_PerformAutomatedTransitionOfLogicalComponents_Description=One Physical Component and Actor will be created for each Logical Component and Actor inside the Logical System
PhysicalArchitectureActivityExplorerPage_PerformAutomatedTransitionOfLogicalComponents_Title=Perform an automated transition of Logical System
PhysicalArchitectureActivityExplorerPage_NewComponentBreakdownDiagram_Title=[PCBD] Create a new Physical Component Breakdown diagram
PhysicalArchitectureActivityExplorerPage_NewPhysicalArchitectureDiagram_Title=[PAB] Create a new Physical Architecture diagram
PhysicalArchitectureActivityExplorerPage_NewPhysicalComponentLogicalComponentMatrix_Title=Create a new Physical Component / Logical Component Matrix

#Section: Delegate Logical Interfaces and create Physical Interfaces
PhysicalArchitectureActivityExplorerPage_DelegateLogicalInterfacesCreatePhysicalInterfacesSection_Title=Delegate Logical Interfaces and create Physical Interfaces
PhysicalArchitectureActivityExplorerPage_DelegateLogicalInterfacesCreatePhysicalInterfacesSection_Description=\
<p>\
Delegate each logical interface to one physical component. Create new physical interfaces between components.\
</p>
PhysicalArchitectureActivityExplorerPage_NewInternalInterfaceDiagramOnPS_Title=[CII] Create a new Contextual Internal Interface diagram on the Physical System

#Section: Enrich Physical Scenarios
PhysicalArchitectureActivityExplorerPage_EnrichPhysicalScenarioSection_Title=Enrich Physical Scenarios
PhysicalArchitectureActivityExplorerPage_EnrichPhysicalScenarioSection_Description=\
<p>\
Specify the dynamical behaviour of the physical components by completing the interaction sequences coming from the Logical Architecture.\
 The enrichment of the interaction sequences and the identification of the new physical interfaces are two very tight and iterative activities.\
</p>\
<p>\
The scenario refinement process is iterative, each update on a source can be automatically propagated to the target.\
</p>
PhysicalArchitectureActivityExplorerPage_PerformTransitionOfCapabilities_Title=Perform an automated transition of Logical Architecture Capabilities
PhysicalArchitectureActivityExplorerPage_PerformTransitionOfCapabilities_Description=Perform an automated transition of Operational analysis Capabilities to a System analysis
PhysicalArchitectureActivityExplorerPage_ExecuteGlobalRefinementOfAllSaCapabilitiesAndScenario_Title=Execute a global refinement of all Logical Capabilities and Scenarios
PhysicalArchitectureActivityExplorerPage_ExecuteGlobalRefinementOfAllSaCapabilitiesAndScenario_Description=One Capability realisation will be created for each Logical Capability. One Physical Scenario will be created for each Logical Scenario
PhysicalArchitectureActivityExplorerPage_NewScenario_Title=[IS] Create a new Interface Scenario

#EPBS Page

#Section: Define CI Components
EpbsArchitectureActivityExplorerPage_DefineCiComponentsSection_Title=Define CI Components
EpbsArchitectureActivityExplorerPage_DefineCiComponentsSection_Description=\
<p>\
Initialisation and automated update of the EPBS Architecture according to the Physical Architecture model.\
 Define additional Configuration Items if necessary.\
</p>
EpbsArchitectureActivityExplorerPage_NewConfigurationItemsBreakdownAction_Title=[CIBD] Create a new Configuration Items Breakdown diagram
EpbsArchitectureActivityExplorerPage_NewEpbsArchitectureBlankAction_Title=[EAB] Create an EPBS Architecture Blank
EpbsArchitectureActivityExplorerPage_CreateTraceabilityMatrixAction_Title=Create Traceability Matrix

#Section: Enrich EPBS Scenarios
EpbsArchitectureActivityExplorerPage_EnrichEPBSScenariosSection_Title=Enrich EPBS Scenarios
EpbsArchitectureActivityExplorerPage_EnrichEPBSScenariosSection_Description=\
<p>\
Create new Interface Scenario.\
</p>

EpbsArchitectureActivityExplorerPage_NewScenario_Title=[IS] Create a new Interface Scenario
EpbsArchitectureActivityExplorerPage_NewScenario_Description=\
<p>\
Create new Interface Scenario.\
</p>

#Section: Deduce Interface Scenarios
EpbsArchitectureActivityExplorerPage_RefineSystemCapabilityToEpbsArchitectureSection_Title=Deduce Interface Scenarios
EpbsArchitectureActivityExplorerPage_RefineSystemCapabilityToEpbsArchitectureSection_Description=<p>Deduce the dynamical behaviour of the configuration items by performing a refinement from the Logical Architecture.</p>
EpbsArchitectureActivityExplorerPage_ExecuteLogicalScenarioRefinementToCapabilityScenarioAction_Title=Execute the Physical Scenario refinement on the Scenarios of a selected Capability