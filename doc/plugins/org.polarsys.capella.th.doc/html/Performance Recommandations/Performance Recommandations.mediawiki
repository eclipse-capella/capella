= Capella Performance Recommandations =
 
== Desynchronize semantic browser ==

By default, the Semantic Browser is always synchronized with the current selection in the Diagram Editor or in the Project Explorer.  

However, with big models and diagrams, performing all the requests might introduce lag between selections of graphical elements and make the whole environment significantly less reactive. It is possible to deactivate this synchronization, toggling off the related toolbar view button , and only relying on the F9 shortcut when needed. To work with Semantic Browser with better performance, it is possible to deactivate the Show diagram  /Show Pattern options since computation of all related diagrams and pattern instances for an element is time-consuming. 

[[Image:Images/Perf_REC1.png|800x450px]]<br>



== Deactivate diagram automatic refreshes ==

Rely on manual refreshing of diagrams instead of on automatic one. In Capella main menu, select Window\Preferences\Sirius and deactivate “Do refresh on representation opening” & “Automatic Refresh” options.

When necessary, update representations refreshing them manually with diagram toolbar button
[[Image:Images/Perf_REC2.png|25x25px]].<br>


[[Image:Images/Perf_REC3.png|650x500px]]<br>


== Diagram and Properties view customizations == 

=== Deactivate transfer viewer automatic expand  ===
In order to avoid the systematic unfolding of element trees, select Window\Preferences\Capella\Transfer Viewer in the main menu and deactivate all choices in “Multiple Selection Dialog” and in “Single Selection Dialog”.

=== Disable transfer viewer label computation ===
In order to show up the dialog faster, it is recommended for huge models to disable the label computation for model elements. Instead of the custom label, the name of the element will be displayed. When the object is not a named element, its meta-class name will be displayed.

[[Image:Images/Perf_REC4.png|650x500px]]<br>


== Use fast linker view ==

The usage of the Fast Linker view frees from systematically displaying dialog boxes performing queries on the whole model. In Capella main menu \Window\Show View, select “Fast Linker” view.

See dedicated User Manual section User Interface.

[[Image:Images/Perf_REC5.png|400x300px]]<br>



== Filter Project explorer model elements ==

Hiding technical and “useless” elements in the tree helps have a clearer vision of the model main elements.<br> In the Project Explorer view toolbar \Customize View…\Filters, check technical model elements to be hidden.

[[Image:Images/Perf_REC6.png|650x750px]]<br>


== Set diagram unsynchronized ==

Unsynchronizing diagrams allows a better control on the elements that are displayed. For example, one should consider unsynchronizing a diagram instead of relying too much on the “Hide Element” functionality. Note that hidden elements are saved in representation and, if they are not necessary and never unmasked, they make aird files significantly and degrade performances at diagram opening.

Check “Unsynchronized” option by right clicking on diagram background: Additional palette tools will appear to insert new diagram elements which would be automatically inserted in default “Synchronized” mode (e.g. Functional Exchanges in dataflow diagrams …).

In “Unsynchronized” mode, diagrams are updated step by step using additional palette tools: It avoids having to hide some elements afterwards. For example, when a diagram is unsynchronized, the Ports of a Function will not be displayed automatically.

See dedicated User Manual section Advanced Management of Diagrams.


[[Image:Images/Perf_REC7.png|500x500px]]<br>



== Avoid source control when generating HTML documentation add-on ==

Capella html documentation add-on generates too many external files in a SCM context. It is advised to run this generation outside a SCM context in order to avoid Capella ClearCase adapter freeze. However the result can be zipped and added to source control.

Moreover, during documentation generation within workspace, one should temporally disable SCM synchronization delay in main toolbar \Window\Preferences\Capella\SCM.

[[Image:Images/Perf_REC8.png|600x500px]]<br>



== In clearcase SCM context, focus on snapshot view ==

In ClearCase SCM context, local snapshot views avoid network delays occurring with dynamic views.

See dedicated Model Configuration Management guidelines


== Fragment Capella Model ==

Fragment Capella models to avoid Capella files (*.capella, *.aird, *.capellafragment, *.airdfragment) to be larger than about 50 MB.


== Adapt capella.ini configuration ==

=== JVM Tuning ===

==== Heap Size ====

When a Capella starts, Java Virtual Machine gets some memory from Operating System. Java Virtual Machine or JVM uses this memory for all its need and part of this memory is called Java Heap Memory. Whenever we create object using new operator or by any another means, object is allocated memory from Heap and when object dies or garbage collected, memory goes back to Heap space in Java.

{|
!style="text-align:left;"| JVM Option
!style="text-align:left;"| Meaning
!style="text-align:left;"| Default Value



|-
|Xms
|Initial java heap size
|1000m
|-
|Xmx
|Maximum java heap size
|3000m
|}


You can always adapt these values to your machine specification and model size, by modifying the '''capella.ini''' file.

A different approach is to create a new shortcut of '''capella.exe''' and pass the updated arguments and values directly in the '''target''' field of its '''properties''' like so:  '''-vm "C:\...\Java\...\bin\javaw.exe" -clean -vmargs -Xms128m –Xmx1208m'''.

==== Stack Size ====

Each thread in the JVM get’s a stack. The stack size will limit the number of threads that you can have. Using a too big stack size will augment the risk to run into an out of memory exception as each thread is allocated more memory than it needs.

{|
!style="text-align:left;"| JVM Option
!style="text-align:left;"| Meaning
!style="text-align:left;"| Default Value
|-
|Xss
|Stack size for each thread
|4m
|}

In case your model contains nested elements on a lot of levels, a StackOverFlow exception can occur in functional transition for example (see the “Error Log” view). To avoid this, you can increase the stack size. Please check the previous '''Heap Size''' section for more information in regards to the file that you should modify.


== Create AIRD analysis and isolate table representation ==

Create separated representation analysis (aird files) and isolate Table representation.

[[Image:Images/Perf_REC10.png|700x350px]]<br>



== Close outline view ==

This view generates graphic lags on big diagrams. It can be closed and reopen when necessary through Capella main toolbar \Window\Show View.

[[Image:Images/Perf_REC11.png|300x400px]]<br>


== Customize enabled validation rules ==

For instance, disable temporally pattern, cycles checks or others, in the main menu Window\Preferences\Model Validation\Constraints.

[[Image:Images/Perf_REC12.png|700x450px]]<br>



== Deactivate option checking model version at session opening ==

Capella main toolbar \Window\Preferences\Capella and deactivate “Check model version at load time” option.

[[Image:Images/Perf_REC13.png|700x450px]]<br>


== Customize MDE reporting preferences ==

In Capella main menu, open Window\Preferences\MDE Reporting and deactivate some choices.

[[Image:Images/Perf_REC14.png|600x350px]]<br>



== Deactivate model change recorder ==

Disabled by default.

In Capella main menu Window\Preferences\Capella\Model Change Recorder, deactivate “Activate model change recording”.

[[Image:Images/Perf_REC15.png|700x450px]]<br>



== Deactivate option showing delete wizard ==

In Capella main menu \Window\Preferences\Capella\Delete, deactivate option “Confirm deletions”.

[[Image:Images/Perf_REC16.png|700x450px]]<br>


== Deactivate project explorer link with editors ==

Disabled by default.

[[Image:Images/Perf_REC17.png|350x180px]]<br>



== Close properties view in case that only pop-up wizard are used to edit the model ==

[[Image:Images/Perf_REC18.png|800x400px]]<br>


