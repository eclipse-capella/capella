/*******************************************************************************
 * Copyright (c) 2006, 2019 THALES DMS FRANCE.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 * 
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *    Thales - initial API and implementation
 *******************************************************************************/

/* Generated file */

package org.polarsys.capella.viatra.core.data.ctx.surrogate

import "http://www.polarsys.org/capella/core/ctx/1.4.0"

// Start of user code for imports 
import "http://www.polarsys.org/capella/core/core/1.4.0"
import "http://www.polarsys.org/capella/common/core/1.4.0"
import "http://www.polarsys.org/capella/core/interaction/1.4.0"
import "http://www.polarsys.org/capella/core/oa/1.4.0"
import "http://www.polarsys.org/capella/core/la/1.4.0"

// End of user code

@Surrogate(feature="purposes")
pattern Capability__purposes(self : Capability, target : CapabilityExploitation) {
	CapabilityExploitation.capability(target, self);
}

@Surrogate(feature="purposeMissions")
pattern Capability__purposeMissions(self : Capability, target : Mission) {
	Capability.purposes.mission(self, target);
}

@Surrogate(feature="realizedOperationalCapabilities")
pattern Capability__realizedOperationalCapabilities(self : Capability, target : OperationalCapability) {
	AbstractCapabilityRealization.sourceElement(acr, self);
AbstractCapabilityRealization.realizedCapability(acr, target);
}

@Surrogate(feature="realizingCapabilityRealizations")
pattern Capability__realizingCapabilityRealizations(self : Capability, target : CapabilityRealization) {
	AbstractCapabilityRealization.targetElement(acr, self);
AbstractCapabilityRealization.realizingCapability(acr, target);
}

@Surrogate(feature="involvedSystemComponents")
pattern Capability__involvedSystemComponents(self : Capability, target : SystemComponent) {
	Capability.ownedCapabilityInvolvements(self, involvements);
	CapabilityInvolvement.systemComponent(involvements, target);
}


