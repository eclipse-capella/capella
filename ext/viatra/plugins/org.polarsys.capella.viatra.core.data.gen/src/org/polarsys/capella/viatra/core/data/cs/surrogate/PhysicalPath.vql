/*******************************************************************************
 * Copyright (c) 2006, 2019 THALES DMS FRANCE.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 * 
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *    Thales - initial API and implementation
 *******************************************************************************/

/* Generated file */

package org.polarsys.capella.viatra.core.data.cs.surrogate

import "http://www.polarsys.org/capella/core/cs/1.4.0"

// Start of user code for imports 
import "http://www.polarsys.org/capella/core/core/1.4.0"
import "http://www.polarsys.org/capella/common/core/1.4.0"

// End of user code

@Surrogate(feature="firstPhysicalPathInvolvements")
pattern PhysicalPath__firstPhysicalPathInvolvements(self : PhysicalPath, target : PhysicalPathInvolvement) {
	PhysicalPath.ownedPhysicalPathInvolvements(self, target);
	PhysicalPathInvolvement.involved(target, _);
	neg find _PreviousInvolvement(target, _);
}
private pattern _PreviousInvolvement(ppi : PhysicalPathInvolvement, previous : PhysicalPathInvolvement) {
	PhysicalPathInvolvement.previousInvolvements(ppi, previous);
}


@Surrogate(feature="realizedPhysicalPaths")
pattern PhysicalPath__realizedPhysicalPaths(self : PhysicalPath, target : PhysicalPath) {
	PhysicalPathRealization.sourceElement(ppr, self);
PhysicalPathRealization.targetElement(ppr, target);
}

@Surrogate(feature="realizingPhysicalPaths")
pattern PhysicalPath__realizingPhysicalPaths(self : PhysicalPath, target : PhysicalPath) {
	PhysicalPathRealization.targetElement(ppr, self);
PhysicalPathRealization.sourceElement(ppr, target);
}


