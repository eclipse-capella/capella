/*******************************************************************************
 * Copyright (c) 2006, 2019 THALES DMS FRANCE.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 * 
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *    Thales - initial API and implementation
 *******************************************************************************/

/* Generated file */


package org.polarsys.capella.viatra.core.data.ctx.surrogate

import "http://www.polarsys.org/capella/core/ctx/1.4.0"

// Start of user code for imports 
import "http://www.polarsys.org/capella/core/la/1.4.0"
import "http://www.polarsys.org/capella/core/core/1.4.0"
import "http://www.polarsys.org/capella/core/cs/1.4.0"
import "http://www.polarsys.org/capella/core/oa/1.4.0"
import "http://www.polarsys.org/capella/core/fa/1.4.0"

// End of user code


@Surrogate(feature="involvingMissions")
pattern SystemComponent__involvingMissions(self : SystemComponent, target : Mission) {
	SystemComponent.missionInvolvements(self, missionInvolvements);
	MissionInvolvement.involver(missionInvolvements, target);
}

@Surrogate(feature="involvingCapabilities")
pattern SystemComponent__involvingCapabilities(self : SystemComponent, target : Capability) {
	SystemComponent.capabilityInvolvements(self, capabilityInvolvements);
	CapabilityInvolvement.involver(capabilityInvolvements, target);
}

@Surrogate(feature="missionInvolvements")
pattern SystemComponent__missionInvolvements(self : SystemComponent, target : MissionInvolvement) {
	SystemComponent.involvingInvolvements(self, target);
}

@Surrogate(feature="realizingLogicalComponents")
pattern SystemComponent__realizingLogicalComponents(self : SystemComponent, target : LogicalComponent) {
	SystemComponent.realizingComponents(self, target);
}

@Surrogate(feature="realizedEntities")
pattern SystemComponent__realizedEntities(self : SystemComponent, target : Entity) {
	SystemComponent.realizingComponents(self, target);
}

@Surrogate(feature="capabilityInvolvements")
pattern SystemComponent__capabilityInvolvements(self : SystemComponent, target : CapabilityInvolvement) {
	SystemComponent.involvingInvolvements(self, target);
}

@Surrogate(feature="allocatedSystemFunctions")
pattern SystemComponent__allocatedSystemFunctions(self : SystemComponent, target : SystemFunction) {
	SystemComponent.allocatedFunctions(self, target);
}

