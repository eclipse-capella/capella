/*******************************************************************************
 * Copyright (c) 2006, 2019 THALES DMS FRANCE.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 * 
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *    Thales - initial API and implementation
 *******************************************************************************/

/* Generated file */

package org.polarsys.capella.viatra.core.data.oa.surrogate

import "http://www.polarsys.org/capella/core/oa/1.4.0"

// Start of user code for imports 
import "http://www.polarsys.org/capella/common/core/1.4.0"
import "http://www.polarsys.org/capella/core/information/1.4.0"
import "http://www.polarsys.org/capella/core/fa/1.4.0"
import "http://www.polarsys.org/capella/core/core/1.4.0"
import "http://www.polarsys.org/capella/core/ctx/1.4.0"
import "http://www.polarsys.org/capella/core/cs/1.4.0"
import "http://www.polarsys.org/capella/core/common/1.4.0"
import "http://www.polarsys.org/capella/core/la/1.4.0"

// End of user code

@Surrogate(feature="roleAllocations")
pattern Entity__roleAllocations(self : Entity, target : RoleAllocation) {
	Entity.outgoingTraces(self, target);
}

@Surrogate(feature="subEntities")
pattern Entity__subEntities(self : Entity, target : Entity) {
	Entity.containedParts.type(self, target);
}

@Surrogate(feature="allocatedOperationalActivities")
pattern Entity__allocatedOperationalActivities(self : Entity, target : OperationalActivity) {
	Entity.allocatedFunctions(self, target);
}

@Surrogate(feature="allocatedRoles")
pattern Entity__allocatedRoles(self : Entity, target : Role) {
	Entity.roleAllocations.role(self, target);
}

@Surrogate(feature="involvingOperationalCapabilities")
pattern Entity__involvingOperationalCapabilities(self : Entity, target : OperationalCapability) {
	Entity.involvingInvolvements(self, eoci);
EntityOperationalCapabilityInvolvement.capability(eoci, target);
}

@Surrogate(feature="realizingSystemComponents")
pattern Entity__realizingSystemComponents(self : Entity, target : SystemComponent) {
	Entity.realizingComponents(self, target);
}

